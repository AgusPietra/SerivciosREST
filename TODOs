Autenticación de twitter. 
Se podrían agregar a la tabla de usuarios los access token y access token secret de dicho usuario en twitter.
Para obtenerlos: http://twitter4j.org/en/code-examples.html#oauth
Si no los tiene (o estuvieran expirados), desde el front end no se le permitiría ver ni actualizar nada. Solo podría apretar un botón que
lo llevaría a la páginade autenticación de twitter. 
Una vez hecho esto, una forma de aprovecharlo para los requests de twitter sería que cuando un usuario pide un contenido, sus
tokens quedan asociados a ese contenido, y se solicitan a twitter utilizándo dichos tokens. De esta forma los contenidos no se repiten
para cada usuario aunque tengan los mismos intereses, pero puedo distribuir la carga de queries entre usuarios activos.


Back-end


Implementar una cola de mensajes para tener una arquitectura non-blocking.

Implementar interfaces para los componentes que aún no tengan.

@CrossOrigin debe ser condicional a desarrollo y no vincularse para producción en los controladores.

Vincular login de frontend con login de twitter, para no tener limitaciones en los requests de la API:
https://developer.twitter.com/en/docs/basics/rate-limiting




Front-end

Hacer que el signin y el signup tengan seguridad (y, eventualmente, vincularlo con un login de twitter)

Que al pedir más contenido, no vuelva a pedir lo que ya tiene.

Que el interests service tenga todos los intereses de los boards, en lugar de solo los activos, de forma que al cambiar de board,
no haya que volver a pedir el contenido devuelta.

